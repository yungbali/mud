import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { useState } from 'react';
import { Button } from "./ui/button";
import { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from "./ui/card";
import { Input } from "./ui/input";
import { Label } from "./ui/label";
import { Textarea } from "./ui/textarea";
import { ChevronLeft, ChevronRight, LucideLoaderCircle, Upload } from 'lucide-react';
var EpkGenerationForm = function (_a) {
    var loading = _a.loading, handleInputChange = _a.handleInputChange, handleSubmit = _a.handleSubmit, prompt = _a.prompt;
    var _b = useState(1), step = _b[0], setStep = _b[1];
    var nextStep = function () { return setStep(step + 1); };
    var prevStep = function () { return setStep(step - 1); };
    return (_jsxs(Card, { className: "w-full max-w-2xl mx-auto relative ".concat(loading ? "after:rounded-xl after:w-full after:h-full after:bg-[rgba(0,0,0,.1)] after:block after:blur-lg after:absolute after:top-0 after:left-0 after:z-50" : ""), children: [loading && _jsx("div", { className: 'flex items-center justify-center rounded-xl w-full h-full absolute top-0 left-0', children: _jsx(LucideLoaderCircle, { className: 'animate-spin w-32 relative z-40', size: 50 }) }), _jsxs(CardHeader, { children: [_jsx(CardTitle, { className: "text-2xl font-bold text-[#333333]", children: "Create Marketing Plan" }), _jsx(CardDescription, { children: "Craft effective strategies to promote your music" })] }), _jsxs(CardContent, { children: [step === 1 && (_jsxs("div", { className: "space-y-4", children: [_jsxs("div", { children: [_jsx(Label, { htmlFor: "artist_name", children: "Artist/Band Name" }), _jsx(Input, { value: prompt.artist_name, onChange: handleInputChange, id: "artist_name", placeholder: "Enter your artist or band name" })] }), _jsxs("div", { children: [_jsx(Label, { htmlFor: "biography", children: "Biography" }), _jsx(Textarea, { value: prompt.biography, onChange: handleInputChange, id: "biography", placeholder: "Write a short bio (250-500 words)" })] }), _jsxs("div", { children: [_jsx(Label, { htmlFor: "genre", children: "Genre(s)" }), _jsx(Input, { value: prompt.genre, onChange: handleInputChange, id: "genre", placeholder: "e.g., Afrobeats, Hip-Hop, Jazz" })] })] })), step === 2 && (_jsxs("div", { className: "space-y-4", children: [_jsxs("div", { children: [_jsx(Label, { children: "Profile Picture" }), _jsx("div", { className: "mt-2 flex items-center justify-center w-full", children: _jsxs("label", { htmlFor: "profile_picture", className: "flex flex-col items-center justify-center w-full h-64 border-2 border-[#9D5465] border-dashed rounded-lg cursor-pointer bg-gray-50 hover:bg-gray-100", children: [_jsxs("div", { className: "flex flex-col items-center justify-center pt-5 pb-6", children: [_jsx(Upload, { className: "w-8 h-8 mb-4 text-[#9D5465]" }), _jsxs("p", { className: "mb-2 text-sm text-[#666666]", children: [_jsx("span", { className: "font-semibold", children: "Click to upload" }), " or drag and drop"] }), _jsx("p", { className: "text-xs text-[#666666]", children: "PNG, JPG or GIF (MAX. 800x400px)" })] }), _jsx(Input, { onChange: handleInputChange, id: "profile_picture", type: "file", className: "hidden" })] }) })] }), _jsxs("div", { children: [_jsx(Label, { htmlFor: "music_links", children: "Music Links" }), _jsx(Input, { value: prompt.music_links, onChange: handleInputChange, id: "music_links", placeholder: "Spotify, Apple Music, SoundCloud URLs" })] }), _jsxs("div", { children: [_jsx(Label, { htmlFor: "social_media", children: "Social Media" }), _jsx(Input, { value: prompt.social_media, onChange: handleInputChange, id: "social_media", placeholder: "Instagram, Twitter, Facebook URLs" })] })] })), step === 3 && (_jsxs("div", { className: "space-y-4", children: [_jsxs("div", { children: [_jsx(Label, { htmlFor: "press_release_news", children: "Press Releases/News" }), _jsx(Textarea, { value: prompt.press_release_news, onChange: handleInputChange, id: "press_release_news", placeholder: "Any recent press releases or news about you" })] }), _jsxs("div", { children: [_jsx(Label, { htmlFor: "achievements", children: "Awards/Achievements" }), _jsx(Input, { value: prompt.achievements, onChange: handleInputChange, id: "achievements", placeholder: "List any awards or significant achievements" })] }), _jsxs("div", { children: [_jsx(Label, { htmlFor: "contact_information", children: "Contact Information" }), _jsx(Input, { value: prompt.contact_information, onChange: handleInputChange, id: "contact_information", placeholder: "Manager's email or official contact" })] })] }))] }), _jsxs(CardFooter, { className: "flex justify-between", children: [step > 1 && (_jsxs(Button, { onClick: prevStep, variant: "outline", children: [_jsx(ChevronLeft, { className: "mr-2 h-4 w-4" }), " Previous"] })), step < 3 ? (_jsxs(Button, { onClick: nextStep, className: "ml-auto bg-[#9D5465] hover:bg-[#8A4757] text-white", children: ["Next ", _jsx(ChevronRight, { className: "ml-2 h-4 w-4" })] })) : (_jsx(Button, { onClick: handleSubmit, className: "ml-auto bg-[#9D5465] hover:bg-[#8A4757] text-white", children: "Create EPK" }))] })] }));
};
export default EpkGenerationForm;
